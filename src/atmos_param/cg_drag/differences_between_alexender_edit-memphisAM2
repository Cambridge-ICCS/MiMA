11,17d13
< alexander_edit_of cg_drag
---
> AM2.1 public release version of cg_drag
14,17d13
< 
< !wfc++ remove for general use
< #ifdef SKIP
< !wfc--
22,24d17
< !wfc remove for general use
< #endif SKIP
< !wfc--
43c36
< character(len=128)  :: tagname =  '$Name: memphis $'
---
> character(len=128)  :: tagname =  '$Name: latest $'
56,62d48
< !wfc++ Addition for regular use
<       integer, allocatable, dimension(:,:)     ::  source_level
< 
<       real,     allocatable, dimension(:,:)     ::  source_amp
< !wfc--
< 
< 
100d85
< real        :: phi0n = 30., phi0s = -30., dphin = 5., dphis = -5.
133,134c118
<                           lat_coords_gl, lon_coords_gl, &
<                           phi0n,phi0s,dphin,dphis
---
>                           lat_coords_gl, lon_coords_gl
158,160c142,143
< !wfc++ not needed if calcucate_ked is removed.
< !!!!rjw real,    dimension(:,:,:), allocatable   :: gwd, ked
< !wfc--
---
> real,    dimension(:,:,:), allocatable   :: gwd, ked
> 
227,229c210
< !rjw integer          :: id_ked_cgwd, id_bf_cgwd, id_gwf_cgwd
< integer          :: id_kedx_cgwd, id_kedy_cgwd, id_bf_cgwd, &
<                     id_gwfx_cgwd, id_gwfy_cgwd
---
> integer          :: id_ked_cgwd, id_bf_cgwd, id_gwf_cgwd
281c262
<       integer                 :: n, i, j, k
---
>       integer                 :: n, k
283d263
<       real                    :: pif = 3.14159265358979/180.
285,287d264
< !wfc ++ added for definition of source_level, source_amp.
<       real, allocatable       ::   lat(:,:)
< !wfc--
314,316d290
< !wfc++ remove for general use
< #ifdef SKIP
< !wfc--
318,320c292
< !wfc++ remove for general use
< #endif SKIP
< !wfc--
---
> 
347,354d318
< 
< !wfc++ new code
<       allocate(  source_level(idf,jdf)  )
<       allocate(  source_amp(idf,jdf)  )
< 
<       allocate(  lat(idf,jdf)  )
< !wfc--
< 
367,389d330
<      
< 
< !wfc++ new code
<         do j=1,jdf
<           lat(:,j)=  0.5*( latb(j+1)+latb(j) )
<           do i=1,idf
<             source_level(i,j) = (kmax + 1) - ((kmax + 1 -    &
<                                 klevel_of_source)*cos(lat(i,j)) + 0.5)
< 
< !rjw             source_amp(i,j)= Bt_0 +                         &
< !rjw                             Bt_eq*exp( -Bt_eq_width*lat(i,j)*lat(i,j) )  + &
< !rjw                             (Bt_nh-Bt_sh)*(1.0+tanh(4.0*lat(i,j)))/2.0 + Bt_sh
< 
<             source_amp(i,j) = Bt_0 +                         &
<                         Bt_nh*0.5*(1.+tanh((lat(i,j)/pif-phi0n)/dphin)) + &
<                         Bt_sh*0.5*(1.+tanh((lat(i,j)/pif-phi0s)/dphis))
<           end do
<         end do
<         source_level = MIN (source_level, kmax-1)
< 
<        deallocate( lat )
< !wfc--
< 
403,405d343
< !wfc++ remove for general use.
< #ifdef SKIP
< !wfc--
434,436d371
< !wfc++ remove for general use.
< #endif SKIP
< !wfc--
468,474c403,404
< !rjw      id_gwf_cgwd =  &
< !rjw         register_diag_field (mod_name, 'gwf_cgwd', axes(1:3), Time, &
< !rjw              'gravity wave forcing on mean flow', &
< !rjw              'm/s^2',  missing_value=missing_value)
< 
<       id_gwfx_cgwd =  &
<          register_diag_field (mod_name, 'gwfx_cgwd', axes(1:3), Time, &
---
>       id_gwf_cgwd =  &
>          register_diag_field (mod_name, 'gwf_cgwd', axes(1:3), Time, &
477,493c407,409
<       id_gwfy_cgwd =  &
<          register_diag_field (mod_name, 'gwfy_cgwd', axes(1:3), Time, &
<               'gravity wave forcing on mean flow', &
<               'm/s^2',  missing_value=missing_value)
< !wfc++ remove
< !!!      if (calculate_ked) then
< !wfc--
< !rjw        id_ked_cgwd =  &
< !rjw         register_diag_field (mod_name, 'ked_cgwd', axes(1:3), Time, &
< !rjw               'effective eddy viscosity from cg_drag', 'm^2/s',   &
< !rjw               missing_value=missing_value)
<         id_kedx_cgwd =  &
<          register_diag_field (mod_name, 'kedx_cgwd', axes(1:3), Time, &
<                'effective eddy viscosity from cg_drag', 'm^2/s',   &
<                missing_value=missing_value)
<         id_kedy_cgwd =  &
<          register_diag_field (mod_name, 'kedy_cgwd', axes(1:3), Time, &
---
>       if (calculate_ked) then
>         id_ked_cgwd =  &
>          register_diag_field (mod_name, 'ked_cgwd', axes(1:3), Time, &
496,498c412,413
< !wfc++ remove
< !!!      endif
< !wfc--
---
>       endif
> 
510,512c425
< !wfc++ remove as calculate_ked no longer used
< #ifdef SKIP2
<      allocate ( gwd(idf,jdf,kmax) )
---
>       allocate ( gwd(idf,jdf,kmax) )
517,518d429
< #endif SKIP2
< !wfc--
520,522d430
< !wfc++ remove for general use
< #ifdef SKIP 
< !wfc--
542,544c450
< !wfc++ remove for general use
< #endif
< !wfc--
---
> 
560,565c466,468
< !wfc++ need to add iloc, jloc?
< !rjw  subroutine cg_drag_calc (is, js, lat, pfull, zfull,    &
< !rjw                          temp, uuu, Time, delt, gwfcng)
< subroutine cg_drag_calc (is, js, lat, pfull, zfull, temp, uuu, vvv,  &
<                          Time, delt, gwfcng_x, gwfcng_y)
< !wfc--
---
> subroutine cg_drag_calc (is, js, lat, pfull, zfull, temp, uuu,   &
>                          Time, delt, gwfcng)
> 
576,578d478
< !wfc++ new arguments not in interface
< !rjw integer,                intent(in)      :: iloc, jloc
< !wfc--
580c480
< real, dimension(:,:,:), intent(in)      :: pfull, zfull, temp, uuu, vvv
---
> real, dimension(:,:,:), intent(in)      :: pfull, zfull, temp, uuu
583,584c483
< !rjw real, dimension(:,:,:), intent(out)     :: gwfcng
< real, dimension(:,:,:), intent(out)     :: gwfcng_x, gwfcng_y
---
> real, dimension(:,:,:), intent(out)     :: gwfcng
610c509
<                                          dtdz, ked_gwfc_x, ked_gwfc_y
---
>                                          dtdz, ked_gwfc
613,615c512,513
<                                          zzchm, zu, zv, zden, zbf,    &
<                                          gwd_xtnd, ked_xtnd, &
<                                          gwd_ytnd, ked_ytnd
---
>                                          zzchm, zu, zden, zbf,   &
>                                          gwd_xtnd, ked_xtnd
617,618d514
< #ifdef SKIP
< !rjw    These should be removed since they are allocated in init
624c520
< #endif SKIP
---
> 
633d528
<       real              :: pif = 3.14159265358979/180.
684,688c579
< 
< 
< !wfc++ no alarm anymore?
< !!!rjw      if (cgdrag_alarm <= 0) then
< !wfc--
---
>       if (cgdrag_alarm <= 0) then
696,697d586
< !wfc++ remove as these are constant.
< #ifdef SKIP
709,710c598
< #endif
< !!wfc-- 
---
> 
764d651
<               zv(i,j,k) = vvv(i,j,k)
777d663
<             zv(i,j,0)    = 2.*zv(i,j,1) - zv(i,j,2)
788c674,678
< !    upon return move the output fields into model-sized arrays. 
---
> !    upon return move the output fields into model-sized arrays. NOTE
> !    THE PRESENCE OF A BUG IN THIS PROCESS - THIS REMAPPING OF THE
> !    OUTPUT DATA WAS NOT DONE, EVEN IN THE ORIGINAL SKYHI 
> !    IMPLEMENTATION, MEANING THAT FORCING WAS ASSIGNED TO THE WRONG 
> !    LEVEL!!!
790,791d679
< !wfc++ Remove as the code is obsolete.
< #ifdef SKIP
794a683
> !!! CORRECTED LINES (BUGFIX #2):
796a686,688
> !!! ORIGINAL  LINES (BUG #2):
> !         gwfcng(:,:,1:kmax) = gwd_xtnd(:,:,0:kmax-1)
> !         ked_gwfc(:,:,1:kmax) = ked_xtnd(:,:,0:kmax-1)
799a692
> !!! CORRECTED LINE (BUGFIX #2):
800a694,695
> !!! ORIGINAL  LINE (BUG #2):
> !         gwfcng(:,:,1:kmax) = gwd_xtnd(:,:,0:kmax-1  )
802,818d696
< #else 
< !wfc--
<        call gwfc (is, ie, js, je, source_level, source_amp,    &
<                      zden, zu, zbf,zzchm, gwd_xtnd, ked_xtnd)
< 
<           gwfcng_x  (:,:,1:kmax) = gwd_xtnd(:,:,1:kmax  )
<           ked_gwfc_x(:,:,1:kmax) = ked_xtnd(:,:,1:kmax  )
< 
<        call gwfc (is, ie, js, je, source_level, source_amp,    &
<                      zden, zv, zbf,zzchm, gwd_ytnd, ked_ytnd)
<           gwfcng_y  (:,:,1:kmax) = gwd_ytnd(:,:,1:kmax  )
<           ked_gwfc_y(:,:,1:kmax) = ked_ytnd(:,:,1:kmax  )
< 
< 
< !wfc++ Remove this test code
< #endif SKIP 
< 
820,832d697
< #ifdef SKIP
<        DO i= 1, imax
<          DO j= 1, jmax
<            DO k= 1, kmax
<               gwfcng(i,j,k)= 1.0*( i + (js+j-2)*60.0 + (k-1)*60.0*36.0 )
<             ENDDO
<           ENDDO
<         ENDDO
< #endif SKIP
< 
< 
< #ifdef SKIP
< !wfc --
871,873d735
< !wfc++ remove for general use
< #endif SKIP
< !wfc--
878,881c740
< !wfc++ Not needed as calculate_ked is gone.
< !!!   rjw   Not needed as we have eliminated restart files 
< !!!rjw        gwd(is:ie,js:je,:) = gwfcng(:,:,:)
< !wfc
---
>         gwd(is:ie,js:je,:) = gwfcng(:,:,:)
888,889d746
< !wfc++ remove as calculate_ked is gone
< #ifdef SKIP
893c750
<             used = send_data (id_ked_cgwd, ked_gwfc, Time, iloc, jloc)
---
>             used = send_data (id_ked_cgwd, ked_gwfc, Time, is, js, 1)
896,913d752
< #endif SKIP
< !wfc--
< 
< !rjw          if (id_ked_cgwd > 0) then
< !wfc++ iloc,jloc used.
< !rjw            used = send_data (id_ked_cgwd, ked_gwfc, Time, iloc, jloc)
< !wfc--
< !rjw          endif
< 
<           if (id_kedx_cgwd > 0) then
<             used = send_data (id_kedx_cgwd, ked_gwfc_x, Time, is, js, 1)
<           endif
< 
<           if (id_kedy_cgwd > 0) then
<             used = send_data (id_kedy_cgwd, ked_gwfc_y, Time, is, js, 1)
<           endif
< 
< 
919,931c758
< !wfc++ iloc, jloc
< !rjw          used = send_data (id_bf_cgwd,  zbf(:,:,1:), Time, iloc, jloc )
<           used = send_data (id_bf_cgwd,  zbf(:,:,1:), Time, is, js )
< !wfc--
<         endif
< ! rjw        if (id_gwf_cgwd > 0) then
< !wfc++ iloc, jloc
< ! rjw          used = send_data (id_gwf_cgwd, gwfcng, Time, iloc, jloc )
< !wfc--
< ! rjw        endif
< 
<         if (id_gwfx_cgwd > 0) then
<           used = send_data (id_gwfx_cgwd, gwfcng_x, Time, is, js, 1)
---
>           used = send_data (id_bf_cgwd,  zbf(:,:,1:), Time, is, js, 1)
933,934c760,761
<         if (id_gwfy_cgwd > 0) then
<           used = send_data (id_gwfy_cgwd, gwfcng_y, Time, is, js, 1)
---
>         if (id_gwf_cgwd > 0) then
>           used = send_data (id_gwf_cgwd, gwfcng, Time, is, js, 1)
937,938d763
< 
< 
944,948c769,771
< !wfc++ no alarms anymore? 
< !!!rjw      else   ! (cgdrag_alarm <= 0)
< !!!rjw        gwfcng(:,:,:) = gwd(is:ie,js:je,:)
< !!!rjw     endif  ! (cgdrag_alarm <= 0)
< !wfc--
---
>       else   ! (cgdrag_alarm <= 0)
>         gwfcng(:,:,:) = gwd(is:ie,js:je,:)
>       endif  ! (cgdrag_alarm <= 0)
956d778
< #ifdef SKIP 
960d781
< !wfc++ If alarm is removed above, no need to set it here.
964d784
< !wfc--
966,967d785
< #endif 
< 
990,992d807
< !wfc++ remove for general use
< #ifdef SKIP2
< !wfc--
1019,1023d833
< !wfc++ remove for general use
< #endif SKIP2
< 
< #ifdef SKIP
< !wfc--
1027,1029d836
< !wfc++ remove for general use
< #endif SKIP
< !wfc--
1084,1087d890
< !wfc++ remove for general use
< #ifdef SKIP
< !wfc--
< 
1152,1154d954
< !wfc++ remove for general use
< #endif SKIP
< !wfc--
1193,1196c993
< !wfc++ remove obsolete code
< !!!rjw  real,    dimension(:,:,0:),  intent(out), optional  :: ked
< !wfc--
< real,    dimension(:,:,0:),  intent(out)  :: ked
---
> real,    dimension(:,:,0:),  intent(out), optional  :: ked
1283,1285c1080
< !wfc++ remove obsolete code
< !!!rjw      if (present(ked)) then
< !wfc--
---
>       if (present(ked)) then
1287,1289c1082
< !wfc++ remove obsolete code
< !!!rjw      endif
< !wfc--
---
>       endif
1351a1145,1147
> !!BUG #1:
> !           do k=0,iz0 -1
> !!BUGFIX #1:
1359a1156,1166
> !!BUG #1 AND BUGFIX #1:
> !---------------------------------------------------------------------
> !!   to return bug, run the above loop only to iz0-1, and reactivate the
> !!   following two lines:
> !!   to return bugfix, run the above loop to iz0, and deactivate the
> !!   following two lines:
> !---------------------------------------------------------------------
> !           k = iz0  
> !           omc(k) = sqrt((bf(i,j,k)*bf(i,j,k)*k2(ink))/   &
> !                         (k2(ink) + alp2))
> 
1420,1422c1227
< !wfc++ remove obsolete code
< !!!rjw                          if (calculate_ked) then
< !wfc--
---
>                           if (calculate_ked) then
1424,1426c1229
< !wfc++ remove obsolete code
< !!!rjw                          endif
< !wfc--
---
>                           endif
1443,1445c1246
< !wfc++ remove obsolete code
< !!!rjw                if (calculate_ked) then
< !wfc--
---
>                 if (calculate_ked) then
1450,1452c1251
< !wfc++ remove obsolete code
< !!!rjw                endif
< !wfc--
---
>                 endif
1455,1457c1254
< !wfc++ remove obsolete code
< !!!rjw                if (calculate_ked) then
< !wfc--
---
>                 if (calculate_ked) then
1459,1461c1256
< !wfc++ remove obsolete code
< !!!rjw                endif
< !wfc--
---
>                 endif
1471,1473c1266
< !wfc++ remove obsolete code
< !!!rjw              if (present(ked)) then
< !wfc--
---
>               if (present(ked)) then
1475,1477c1268
< !wfc++ remove obsolete code
< !!!rjw              endif
< !wfc--
---
>               endif
